/**
 * This class is generated by jOOQ
 */
package de.quinscape.exceedapp.domain.tables.records;


import de.quinscape.exceedapp.domain.tables.OrderItem;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderItemRecord extends UpdatableRecordImpl<OrderItemRecord> implements Record4<String, Integer, String, String> {

	private static final long serialVersionUID = -17795883;

	/**
	 * Setter for <code>shipping.order_item.id</code>.
	 */
	public void setId(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>shipping.order_item.id</code>.
	 */
	@NotNull
	@Size(max = 36)
	public String getId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>shipping.order_item.quantity</code>.
	 */
	public void setQuantity(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>shipping.order_item.quantity</code>.
	 */
	public Integer getQuantity() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>shipping.order_item.product_id</code>.
	 */
	public void setProductId(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>shipping.order_item.product_id</code>.
	 */
	@Size(max = 36)
	public String getProductId() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>shipping.order_item.order_id</code>.
	 */
	public void setOrderId(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>shipping.order_item.order_id</code>.
	 */
	@Size(max = 36)
	public String getOrderId() {
		return (String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, Integer, String, String> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, Integer, String, String> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return OrderItem.ORDER_ITEM.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return OrderItem.ORDER_ITEM.QUANTITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return OrderItem.ORDER_ITEM.PRODUCT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return OrderItem.ORDER_ITEM.ORDER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getQuantity();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getProductId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getOrderId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderItemRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderItemRecord value2(Integer value) {
		setQuantity(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderItemRecord value3(String value) {
		setProductId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderItemRecord value4(String value) {
		setOrderId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderItemRecord values(String value1, Integer value2, String value3, String value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached OrderItemRecord
	 */
	public OrderItemRecord() {
		super(OrderItem.ORDER_ITEM);
	}

	/**
	 * Create a detached, initialised OrderItemRecord
	 */
	public OrderItemRecord(String id, Integer quantity, String productId, String orderId) {
		super(OrderItem.ORDER_ITEM);

		setValue(0, id);
		setValue(1, quantity);
		setValue(2, productId);
		setValue(3, orderId);
	}
}
