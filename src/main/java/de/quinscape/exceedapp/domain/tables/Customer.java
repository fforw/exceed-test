/**
 * This class is generated by jOOQ
 */
package de.quinscape.exceedapp.domain.tables;


import de.quinscape.exceedapp.domain.Keys;
import de.quinscape.exceedapp.domain.Shipping;
import de.quinscape.exceedapp.domain.tables.records.CustomerRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Customer extends TableImpl<CustomerRecord> {

	private static final long serialVersionUID = 1384423256;

	/**
	 * The reference instance of <code>shipping.customer</code>
	 */
	public static final Customer CUSTOMER = new Customer();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CustomerRecord> getRecordType() {
		return CustomerRecord.class;
	}

	/**
	 * The column <code>shipping.customer.id</code>.
	 */
	public final TableField<CustomerRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>shipping.customer.salutation</code>.
	 */
	public final TableField<CustomerRecord, String> SALUTATION = createField("salutation", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * The column <code>shipping.customer.number</code>.
	 */
	public final TableField<CustomerRecord, String> NUMBER = createField("number", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>shipping.customer.name</code>.
	 */
	public final TableField<CustomerRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(120).nullable(false), this, "");

	/**
	 * The column <code>shipping.customer.billing_address_id</code>.
	 */
	public final TableField<CustomerRecord, String> BILLING_ADDRESS_ID = createField("billing_address_id", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>shipping.customer.delivery_address_id</code>.
	 */
	public final TableField<CustomerRecord, String> DELIVERY_ADDRESS_ID = createField("delivery_address_id", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "");

	/**
	 * Create a <code>shipping.customer</code> table reference
	 */
	public Customer() {
		this("customer", null);
	}

	/**
	 * Create an aliased <code>shipping.customer</code> table reference
	 */
	public Customer(String alias) {
		this(alias, CUSTOMER);
	}

	private Customer(String alias, Table<CustomerRecord> aliased) {
		this(alias, aliased, null);
	}

	private Customer(String alias, Table<CustomerRecord> aliased, Field<?>[] parameters) {
		super(alias, Shipping.SHIPPING, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CustomerRecord> getPrimaryKey() {
		return Keys.PK_CUSTOMER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CustomerRecord>> getKeys() {
		return Arrays.<UniqueKey<CustomerRecord>>asList(Keys.PK_CUSTOMER);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<CustomerRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<CustomerRecord, ?>>asList(Keys.CUSTOMER__FK_CUSTOMER_BILLING_ADDRESS_ID, Keys.CUSTOMER__FK_CUSTOMER_DELIVERY_ADDRESS_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Customer as(String alias) {
		return new Customer(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Customer rename(String name) {
		return new Customer(name, null);
	}
}
