/**
 * This class is generated by jOOQ
 */
package de.quinscape.exceedapp.domain.tables.records;


import de.quinscape.exceedapp.domain.tables.Product;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductRecord extends UpdatableRecordImpl<ProductRecord> implements Record6<String, String, String, Long, String, Boolean> {

	private static final long serialVersionUID = -525334436;

	/**
	 * Setter for <code>shipping.product.id</code>.
	 */
	public void setId(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>shipping.product.id</code>.
	 */
	@NotNull
	@Size(max = 36)
	public String getId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>shipping.product.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>shipping.product.name</code>.
	 */
	@NotNull
	@Size(max = 64)
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>shipping.product.description</code>.
	 */
	public void setDescription(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>shipping.product.description</code>.
	 */
	public String getDescription() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>shipping.product.price</code>.
	 */
	public void setPrice(Long value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>shipping.product.price</code>.
	 */
	@NotNull
	public Long getPrice() {
		return (Long) getValue(3);
	}

	/**
	 * Setter for <code>shipping.product.number</code>.
	 */
	public void setNumber(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>shipping.product.number</code>.
	 */
	@NotNull
	@Size(max = 36)
	public String getNumber() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>shipping.product.discontinued</code>.
	 */
	public void setDiscontinued(Boolean value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>shipping.product.discontinued</code>.
	 */
	@NotNull
	public Boolean getDiscontinued() {
		return (Boolean) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<String, String, String, Long, String, Boolean> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<String, String, String, Long, String, Boolean> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Product.PRODUCT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Product.PRODUCT.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Product.PRODUCT.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field4() {
		return Product.PRODUCT.PRICE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Product.PRODUCT.NUMBER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field6() {
		return Product.PRODUCT.DISCONTINUED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value4() {
		return getPrice();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getNumber();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value6() {
		return getDiscontinued();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProductRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProductRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProductRecord value3(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProductRecord value4(Long value) {
		setPrice(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProductRecord value5(String value) {
		setNumber(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProductRecord value6(Boolean value) {
		setDiscontinued(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProductRecord values(String value1, String value2, String value3, Long value4, String value5, Boolean value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ProductRecord
	 */
	public ProductRecord() {
		super(Product.PRODUCT);
	}

	/**
	 * Create a detached, initialised ProductRecord
	 */
	public ProductRecord(String id, String name, String description, Long price, String number, Boolean discontinued) {
		super(Product.PRODUCT);

		setValue(0, id);
		setValue(1, name);
		setValue(2, description);
		setValue(3, price);
		setValue(4, number);
		setValue(5, discontinued);
	}
}
