/**
 * This class is generated by jOOQ
 */
package de.quinscape.editor.app.domain.gen.tables.records;


import de.quinscape.editor.app.domain.gen.tables.Bar;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BarRecord extends UpdatableRecordImpl<BarRecord> implements Record4<String, String, Integer, String> {

	private static final long serialVersionUID = 222461285;

	/**
	 * Setter for <code>public.bar.id</code>.
	 */
	public void setId(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.bar.id</code>.
	 */
	@NotNull
	@Size(max = 36)
	public String getId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>public.bar.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.bar.name</code>.
	 */
	@NotNull
	@Size(max = 150)
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.bar.num</code>.
	 */
	public void setNum(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.bar.num</code>.
	 */
	@NotNull
	public Integer getNum() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>public.bar.foo_id</code>.
	 */
	public void setFooId(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.bar.foo_id</code>.
	 */
	@Size(max = 36)
	public String getFooId() {
		return (String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, String, Integer, String> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, String, Integer, String> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Bar.BAR.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Bar.BAR.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Bar.BAR.NUM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Bar.BAR.FOO_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getNum();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getFooId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BarRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BarRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BarRecord value3(Integer value) {
		setNum(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BarRecord value4(String value) {
		setFooId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BarRecord values(String value1, String value2, Integer value3, String value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached BarRecord
	 */
	public BarRecord() {
		super(Bar.BAR);
	}

	/**
	 * Create a detached, initialised BarRecord
	 */
	public BarRecord(String id, String name, Integer num, String fooId) {
		super(Bar.BAR);

		setValue(0, id);
		setValue(1, name);
		setValue(2, num);
		setValue(3, fooId);
	}
}
